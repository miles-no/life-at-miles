name: Maintenance Tasks

on:
  schedule:
    # Run weekly on Monday at 00:00 UTC
    - cron: '0 0 * * 1'
  workflow_dispatch: # Allow manual trigger

jobs:
  check-updates:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          
      - name: Install dependencies
        run: npm ci

      - name: Check for Node.js updates
        id: check-node
        run: |
          if ! node scripts/update-node-version.js --check-only; then
            echo "node_update_needed=true" >> $GITHUB_OUTPUT
          fi

      - name: Check for npm package updates
        id: check-deps
        run: |
          # Install npm-check-updates globally
          npm install -g npm-check-updates
          
          # Check for updates and save to JSON file
          if ncu --packageFile package.json --jsonUpgraded > updates.json; then
            if [ -s updates.json ] && [ "$(cat updates.json)" != "{}" ]; then
              echo "deps_update_needed=true" >> $GITHUB_OUTPUT
              cat updates.json | jq -r 'to_entries | map("\(.key): \(.value)") | .[]' > updates.txt
            fi
          fi

      - name: Create maintenance PR
        if: steps.check-node.outputs.node_update_needed == 'true' || steps.check-deps.outputs.deps_update_needed == 'true'
        run: |
          # Set up git
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Create branch
          DATE=$(date '+%Y-%m-%d')
          BRANCH="maintenance-updates-${DATE}"
          git checkout -b $BRANCH
          
          # Apply Node.js updates if needed
          if [ "${{ steps.check-node.outputs.node_update_needed }}" = "true" ]; then
            node scripts/update-node-version.js
          fi
          
          # Apply package updates if needed
          if [ "${{ steps.check-deps.outputs.deps_update_needed }}" = "true" ]; then
            ncu -u
            npm install
          fi
          
          # Create commit message
          MSG="chore: maintenance updates\n\n"
          if [ "${{ steps.check-node.outputs.node_update_needed }}" = "true" ]; then
            MSG="${MSG}• Updated Node.js to latest LTS version\n"
          fi
          if [ "${{ steps.check-deps.outputs.deps_update_needed }}" = "true" ]; then
            MSG="${MSG}• Updated npm packages:\n"
            while IFS= read -r line; do
              MSG="${MSG}  - ${line}\n"
            done < updates.txt
          fi
          
          # Commit and push changes
          git add .
          git commit -m "${MSG}"
          git push origin $BRANCH
          
          # Create PR body
          BODY="This PR includes the following maintenance updates:\n\n"
          if [ "${{ steps.check-node.outputs.node_update_needed }}" = "true" ]; then
            BODY="${BODY}### Node.js Update\n"
            BODY="${BODY}• Updated to latest LTS version\n\n"
          fi
          if [ "${{ steps.check-deps.outputs.deps_update_needed }}" = "true" ]; then
            BODY="${BODY}### Package Updates\n"
            BODY="${BODY}\`\`\`\n$(cat updates.txt)\n\`\`\`\n\n"
          fi
          BODY="${BODY}Please review the changes and run tests before merging."
          
          # Create PR using GitHub CLI
          gh pr create \
            --title "chore: weekly maintenance updates" \
            --body "$BODY" \
            --label "dependencies,maintenance" \
            --base main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}